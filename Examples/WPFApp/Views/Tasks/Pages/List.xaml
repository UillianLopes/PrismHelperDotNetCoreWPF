<Page x:Class="WPFApp.Views.Tasks.Pages.List"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:icons="http://metro.mahapps.com/winfx/xaml/iconpacks"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:nav="clr-namespace:Libs.Prism.Navigation.Helpers;assembly=Libs.Prism.Navigation"
      xmlns:models="clr-namespace:WPFApp.Domain.Models;assembly=WPFApp.Domain"
      xmlns:consts="clr-namespace:WPFApp.Extras.Constants"
      xmlns:helpers="clr-namespace:WPFApp.Extras.Helpers"
      xmlns:itv="http://schemas.microsoft.com/xaml/behaviors"
      xmlns:vm="clr-namespace:WPFApp.ViewModels.Tasks.Pages"
      xmlns:enums="clr-namespace:WPFApp.Domain.Enums;assembly=WPFApp.Domain"
      xmlns:navBhv="clr-namespace:Libs.Prism.Navigation.Behaviors;assembly=Libs.Prism.Navigation"
      mc:Ignorable="d"
      d:DesignHeight="450"
      d:DesignWidth="800"
      d:DataContext="{d:DesignInstance vm:ListViewModel}"
      Title="List">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" helpers:StackPanelHelper.LayoutGap="8" Margin="0,0,0,8">
            <Button nav:ButtonHelpers.AreaName="{x:Static consts:NavigationAreas.MAIN_AREA}"
                    nav:ButtonHelpers.UseHistory="True"
                    nav:ButtonHelpers.Route="{x:Static consts:NavigationRoutes.HOME_PAGE}">
                <StackPanel Orientation="Horizontal"  >
                    <icons:PackIconMaterial Kind="Home" VerticalAlignment="Center"></icons:PackIconMaterial>
                    <Label Content="_HOME"></Label>
                </StackPanel>
            </Button>
            <Button nav:ButtonHelpers.AreaName="{x:Static consts:NavigationAreas.MAIN_AREA}"
                    nav:ButtonHelpers.UseHistory="True"
                    nav:ButtonHelpers.Route="{x:Static consts:NavigationRoutes.TASK_REGISTER}">
                <StackPanel Orientation="Horizontal" >
                    <icons:PackIconMaterial Kind="Plus" VerticalAlignment="Center"></icons:PackIconMaterial>
                    <Label Content="_NEW TASK"></Label>
                </StackPanel>
            </Button>
        </StackPanel>
        <DataGrid Grid.Row="1" 
                  ItemsSource="{Binding Path=Tasks}" 
                  CanUserAddRows="False"
                  AutoGenerateColumns="False"
                  x:Name="GrdTasks">
            <itv:Interaction.Triggers>
                <itv:EventTrigger EventName="MouseDoubleClick">
                    <navBhv:Navigate 
                        AreaName="{x:Static consts:NavigationAreas.MAIN_AREA}"
                        Route="{x:Static consts:NavigationRoutes.TASK_DETAIL}"
                        UseHistory="False"
                        QueryParams="{Binding ElementName=GrdTasks, Path=SelectedItem}"></navBhv:Navigate>
                </itv:EventTrigger>
            </itv:Interaction.Triggers>
            <DataGrid.Columns>
                <DataGridTextColumn IsReadOnly="True" Header="Name" Binding="{Binding Path=Name}"></DataGridTextColumn>
                <DataGridTextColumn IsReadOnly="True" Header="Name" Binding="{Binding Path=Deadline, StringFormat='yyyy/MM/dd HH:mm:ss'}"></DataGridTextColumn>
                <DataGridTextColumn IsReadOnly="True" Header="Description" Binding="{Binding Path=Description}" Width="*"></DataGridTextColumn>
                <DataGridTemplateColumn Header="State" Width="auto">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type models:TaskModel}">
                            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                <icons:PackIconMaterial Kind="NewBox" Visibility="{Binding Path=CurrentState, Converter={StaticResource EqualsToVisibilityConverter}, ConverterParameter={x:Static enums:TaskState.Created}}"></icons:PackIconMaterial>
                                <icons:PackIconFontAwesome Kind="PlaySolid" Visibility="{Binding Path=CurrentState, Converter={StaticResource EqualsToVisibilityConverter}, ConverterParameter={x:Static enums:TaskState.Started}}"></icons:PackIconFontAwesome>
                                <icons:PackIconFontAwesome Kind="PauseSolid" Visibility="{Binding Path=CurrentState, Converter={StaticResource EqualsToVisibilityConverter}, ConverterParameter={x:Static enums:TaskState.Paused}}"></icons:PackIconFontAwesome>
                                <icons:PackIconFontAwesome Kind="CheckSolid" Visibility="{Binding Path=CurrentState, Converter={StaticResource EqualsToVisibilityConverter}, ConverterParameter={x:Static enums:TaskState.Completed}}"></icons:PackIconFontAwesome>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</Page>
